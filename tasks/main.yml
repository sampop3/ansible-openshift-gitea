---
## Gitea Git Server Install

# create project
- name: check if gitea project {{ project_name }} exists
  shell: "{{ openshift_cli }} get project {{ project_name }}"
  register: gitea_project_result
  ignore_errors: true
  changed_when: false

- name: create gitea project {{ project_name }}
  shell: "{{ openshift_cli }} new-project {{ project_name }} --display-name='{{ project_display_name }}' --description='{{ project_desc }}'"
  when: gitea_project_result|failed

- name: assign user as project admin
  shell: "{{ openshift_cli }} adm policy add-role-to-user admin {{ project_admin }} -n {{ project_name }}"
  ignore_errors: true
  when:
    - gitea_project_result|failed
    - project_admin is defined
    - project_admin is not none
    - project_admin|trim() != ""

- name: annotate gitea project {{ project_name }}
  shell: "{{ openshift_cli }} annotate --overwrite namespace {{ project_name }} {{ project_annotations }}"
  ignore_errors: true
  when:
    - gitea_project_result|failed
    - project_annotations is defined
    - project_annotations is not none
    - project_annotations|trim() != ""

# install gitea
- name: check if gitea exists
  shell: "{{ openshift_cli }} get service {{ gitea_service_name }} -n {{ project_name }}"
  register: install_gitea
  ignore_errors: true
  changed_when: false

- name: remove existing gitea if clean deploy requested
  shell: |
    {{ openshift_cli }} delete all,cm,pvc -l app={{ gitea_service_name }} -n {{ project_name }}
    {{ openshift_cli }} delete sa {{ gitea_service_name }} -n {{ project_name }}
  when: 
    - install_gitea|succeeded 
    - clean_deploy|bool

- import_tasks: deploy.yml
  when: clean_deploy|bool or install_gitea|failed

# create gitea users
- import_tasks: create_users.yml
